import React, {
  ComponentPropsWithRef,
  useCallback,
  useEffect,
  useState
} from 'react'
import styles from "./emblaCarousel.module.css";
import { EmblaCarouselType } from 'embla-carousel'
type UsePrevNextButtonsType = {
  prevBtnDisabled: boolean
  nextBtnDisabled: boolean
  onPrevButtonClick: () => void
  onNextButtonClick: () => void
}
export const usePrevNextButtons = (
  emblaApi: EmblaCarouselType | undefined
): UsePrevNextButtonsType => {
  const [prevBtnDisabled, setPrevBtnDisabled] = useState(true)
  const [nextBtnDisabled, setNextBtnDisabled] = useState(true)
  const onPrevButtonClick = useCallback(() => {
    if (!emblaApi) return
    emblaApi.scrollPrev()
  }, [emblaApi])
  const onNextButtonClick = useCallback(() => {
    if (!emblaApi) return
    emblaApi.scrollNext()
  }, [emblaApi])
  const onSelect = useCallback((emblaApi: EmblaCarouselType) => {
    setPrevBtnDisabled(!emblaApi.canScrollPrev())
    setNextBtnDisabled(!emblaApi.canScrollNext())
  }, [])
  useEffect(() => {
    if (!emblaApi) return
    onSelect(emblaApi)
    emblaApi.on('reInit', onSelect).on('select', onSelect)
  }, [emblaApi, onSelect])
  return {
    prevBtnDisabled,
    nextBtnDisabled,
    onPrevButtonClick,
    onNextButtonClick
  }
}
type PropType = ComponentPropsWithRef<'button'>
export const PrevButton: React.FC<PropType> = (props) => {
  const { children, ...restProps } = props
  return (
    <button
      className={`w-[20px] h-[20px] sm:w-[35px] sm:h-[35px] ${styles.embla__button}`}
      type="button"
      {...restProps}
    >
      <svg className={`${styles.embla__button__svg}`} width="35" height="35" viewBox="0 0 35 35" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M17.5 0C27.165 0 35 7.83502 35 17.5C35 27.165 27.165 35 17.5 35C7.83502 35 0 27.165 0 17.5C0 7.83502 7.83502 0 17.5 0ZM17.0059 10.501C17.019 10.5011 17.0318 10.5037 17.0449 10.5049C17.0606 10.5063 17.0763 10.5069 17.0918 10.5098C17.1092 10.513 17.1258 10.5184 17.1426 10.5234C17.1566 10.5276 17.1709 10.5307 17.1846 10.5361C17.1884 10.5377 17.1925 10.5384 17.1963 10.54C17.2123 10.5469 17.2268 10.5569 17.2422 10.5654C17.251 10.5703 17.26 10.5746 17.2686 10.5801C17.273 10.5829 17.2779 10.5849 17.2822 10.5879C17.294 10.596 17.3042 10.606 17.3154 10.6152C17.317 10.6166 17.3187 10.6178 17.3203 10.6191C17.3281 10.6257 17.3373 10.6306 17.3447 10.6377C17.3465 10.6394 17.3479 10.6418 17.3496 10.6436C17.3522 10.6461 17.3548 10.6487 17.3574 10.6514C17.3588 10.6528 17.3609 10.6538 17.3623 10.6553L22.3623 15.9053C22.5526 16.1052 22.5446 16.4219 22.3447 16.6123C22.1448 16.8026 21.8281 16.7946 21.6377 16.5947L17.5 12.25V25C17.5 25.2761 17.2761 25.5 17 25.5C16.7239 25.5 16.5 25.2761 16.5 25V12.25L12.3623 16.5947L12.2852 16.6611C12.0943 16.7938 11.8302 16.7787 11.6553 16.6123C11.4803 16.4457 11.4528 16.1825 11.5762 15.9854L11.6377 15.9053L16.6377 10.6553L16.6436 10.6514C16.6461 10.6487 16.6487 10.6461 16.6514 10.6436C16.653 10.642 16.6537 10.6392 16.6553 10.6377C16.6629 10.6304 16.6727 10.6258 16.6807 10.6191C16.6823 10.6178 16.6839 10.6166 16.6855 10.6152C16.6968 10.606 16.707 10.596 16.7188 10.5879C16.7231 10.5849 16.728 10.5829 16.7324 10.5801C16.7407 10.5748 16.7493 10.5702 16.7578 10.5654L16.8145 10.5371C16.8288 10.5314 16.8437 10.5278 16.8584 10.5234C16.8752 10.5185 16.8917 10.513 16.9092 10.5098C16.9247 10.5069 16.9404 10.5063 16.9561 10.5049C16.9691 10.5037 16.982 10.5011 16.9951 10.501C16.9967 10.501 16.9984 10.5 17 10.5C17.002 10.5 17.0039 10.501 17.0059 10.501ZM1 17.5C1 26.6127 8.3873 34 17.5 34C26.6127 34 34 26.6127 34 17.5C34 8.3873 26.6127 1 17.5 1C8.3873 1 1 8.3873 1 17.5Z" fill="currentColor" />
      </svg>
      {children}
    </button>
  )
}
export const NextButton: React.FC<PropType> = (props) => {
  const { children, ...restProps } = props
  return (
    <button
      className={`w-[20px] h-[20px] sm:w-[35px] sm:h-[35px] ${styles.embla__button}`}
      type="button"
      {...restProps}
    >
      <svg className={`${styles.embla__button__svg}`} width="35" height="35" viewBox="0 0 35 35" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M17.5 0C27.165 0 35 7.83502 35 17.5C35 27.165 27.165 35 17.5 35C7.83502 35 0 27.165 0 17.5C0 7.83502 7.83502 0 17.5 0ZM17 9.5C17.2761 9.5 17.5 9.72386 17.5 10V22.75L21.6377 18.4053L21.7148 18.3389C21.9057 18.2062 22.1698 18.2213 22.3447 18.3877C22.5197 18.5543 22.5472 18.8175 22.4238 19.0146L22.3623 19.0947L17.3623 24.3447L17.3564 24.3486C17.3539 24.3513 17.3513 24.3539 17.3486 24.3564C17.347 24.358 17.3463 24.3608 17.3447 24.3623C17.3371 24.3696 17.3273 24.3742 17.3193 24.3809C17.3177 24.3822 17.3161 24.3834 17.3145 24.3848C17.3032 24.394 17.293 24.404 17.2812 24.4121C17.2769 24.4151 17.272 24.4171 17.2676 24.4199C17.2593 24.4252 17.2507 24.4298 17.2422 24.4346L17.1855 24.4629C17.1712 24.4686 17.1563 24.4722 17.1416 24.4766C17.1248 24.4815 17.1083 24.487 17.0908 24.4902C17.0753 24.4931 17.0596 24.4937 17.0439 24.4951C17.0309 24.4963 17.018 24.4989 17.0049 24.499C17.0033 24.499 17.0016 24.5 17 24.5C16.998 24.5 16.9961 24.499 16.9941 24.499C16.981 24.4989 16.9682 24.4963 16.9551 24.4951C16.9394 24.4937 16.9237 24.4931 16.9082 24.4902C16.8908 24.487 16.8742 24.4816 16.8574 24.4766C16.8434 24.4724 16.8291 24.4693 16.8154 24.4639C16.8116 24.4623 16.8075 24.4616 16.8037 24.46C16.7877 24.4531 16.7732 24.4431 16.7578 24.4346C16.749 24.4297 16.74 24.4254 16.7314 24.4199C16.727 24.4171 16.7221 24.4151 16.7178 24.4121C16.706 24.404 16.6958 24.394 16.6846 24.3848C16.683 24.3834 16.6813 24.3822 16.6797 24.3809C16.6719 24.3743 16.6627 24.3694 16.6553 24.3623C16.6535 24.3606 16.6521 24.3582 16.6504 24.3564C16.6478 24.3539 16.6452 24.3513 16.6426 24.3486C16.6412 24.3472 16.6391 24.3462 16.6377 24.3447L11.6377 19.0947C11.4474 18.8948 11.4554 18.5781 11.6553 18.3877C11.8552 18.1974 12.1719 18.2054 12.3623 18.4053L16.5 22.75V10C16.5 9.72386 16.7239 9.5 17 9.5ZM1 17.5C1 26.6127 8.3873 34 17.5 34C26.6127 34 34 26.6127 34 17.5C34 8.3873 26.6127 1 17.5 1C8.3873 1 1 8.3873 1 17.5Z" fill="currentColor" />
      </svg>
      {children}
    </button>
  )
}
